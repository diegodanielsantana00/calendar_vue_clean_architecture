name: Deploy to Ubuntu Server with Docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create .env file
        run: |
          cat <<EOF > .env
          VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}
          EOF

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install --force

      - name: Build the Docker image
        run: |
          docker build -t test-bluetechnology .

      - name: Save Docker image to tar file
        run: |
          docker save test-bluetechnology > test-bluetechnology.tar

      - name: Copy Docker image to server
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass
          sshpass -p "$SERVER_PASSWORD" scp -o StrictHostKeyChecking=no test-bluetechnology.tar $SERVER_USER@$SERVER_IP:$DEPLOY_PATH

      - name: Deploy Docker container on server
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass docker.io
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "
            docker stop test-bluetechnology || true
            docker rm test-bluetechnology || true
            docker load -i $DEPLOY_PATH/test-bluetechnology.tar
            docker run -d --name test-bluetechnology -p 8101:80 test-bluetechnology
          "